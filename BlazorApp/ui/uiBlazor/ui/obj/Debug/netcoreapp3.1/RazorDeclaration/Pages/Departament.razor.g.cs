// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace ui.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\Joaquin Auce\source\repos\BlazorApp\ui\uiBlazor\ui\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Joaquin Auce\source\repos\BlazorApp\ui\uiBlazor\ui\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Joaquin Auce\source\repos\BlazorApp\ui\uiBlazor\ui\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Joaquin Auce\source\repos\BlazorApp\ui\uiBlazor\ui\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Joaquin Auce\source\repos\BlazorApp\ui\uiBlazor\ui\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Joaquin Auce\source\repos\BlazorApp\ui\uiBlazor\ui\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Joaquin Auce\source\repos\BlazorApp\ui\uiBlazor\ui\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Joaquin Auce\source\repos\BlazorApp\ui\uiBlazor\ui\_Imports.razor"
using ui;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Joaquin Auce\source\repos\BlazorApp\ui\uiBlazor\ui\_Imports.razor"
using ui.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Joaquin Auce\source\repos\BlazorApp\ui\uiBlazor\ui\Pages\Departament.razor"
using System.Text.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Joaquin Auce\source\repos\BlazorApp\ui\uiBlazor\ui\Pages\Departament.razor"
using System.Text.Json.Serialization;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/Departament")]
    public partial class Departament : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 113 "C:\Users\Joaquin Auce\source\repos\BlazorApp\ui\uiBlazor\ui\Pages\Departament.razor"
       

    public class DepartamentClass
    {
        public int DepartamentId { get; set; }
        public string DepartamentName { get; set; }
    }

    private IEnumerable<DepartamentClass> departaments = Array.Empty<DepartamentClass>();

    private string DepartamentIdFilter = "";
    private string DepartamentNameFilter = "";

    private IEnumerable<DepartamentClass> departamentsWithoutFilter = Array.Empty<DepartamentClass>();

    private string modalTitle;
    private int DepartamentId;
    private string DepartamentName;

    protected override async Task OnInitializedAsync()
    {
        await refreshList();
    }

    private async Task refreshList()
    {
        var request = new HttpRequestMessage(HttpMethod.Get,
            config["Api_Url"] + "Departament");

        var client = ClientFactory.CreateClient();

        var response = await client.SendAsync(request);

        using var responseStream = await response.Content.ReadAsStreamAsync();

        departamentsWithoutFilter = departaments = await JsonSerializer.DeserializeAsync<IEnumerable<DepartamentClass>>(responseStream);

    }

    private void FilterFn()
    {
        departaments = departamentsWithoutFilter.Where(
            c => c.DepartamentId.ToString().Contains(DepartamentIdFilter) &&
            c.DepartamentName.ToLower().Contains(DepartamentNameFilter.ToLower()));
    }

    private void SortFn(string property, string asc_desc)
    {
        if (property == "DepartamentId")
        {
            if (asc_desc == "asc")
            {
                departaments = departamentsWithoutFilter.OrderBy(c => c.DepartamentId);
            }
            else
            {
                departaments = departamentsWithoutFilter.OrderByDescending(c => c.DepartamentId);
            }
        }
        else
        {
            if (asc_desc == "asc")
            {
                departaments = departamentsWithoutFilter.OrderBy(c => c.DepartamentName);
            }
            else
            {
                departaments = departamentsWithoutFilter.OrderByDescending(c => c.DepartamentName);
            }
        }
    }

    private async Task createClick()
    {
        var depObj = new DepartamentClass() { DepartamentName = DepartamentName };

        var request = new HttpRequestMessage(HttpMethod.Post,
            config["Api_Url"] + "Departament");

        request.Content = new StringContent(JsonSerializer.Serialize(depObj), null, "application/json");

        var client = ClientFactory.CreateClient();

        var response = await client.SendAsync(request);

        using var responseStream = await response.Content.ReadAsStreamAsync();

        string resp = await JsonSerializer.DeserializeAsync<string>(responseStream);

        await JS.InvokeVoidAsync("alert", resp);

        await refreshList();

    }

    private async Task updateClick()
    {
        var depObj = new DepartamentClass() {
            DepartamentId = DepartamentId,
            DepartamentName = DepartamentName };

        var request = new HttpRequestMessage(HttpMethod.Put,
            config["Api_Url"] + "Departament");

        request.Content = new StringContent(JsonSerializer.Serialize(depObj), null, "application/json");

        var client = ClientFactory.CreateClient();

        var response = await client.SendAsync(request);

        using var responseStream = await response.Content.ReadAsStreamAsync();

        string resp = await JsonSerializer.DeserializeAsync<string>(responseStream);

        await JS.InvokeVoidAsync("alert", resp);

        await refreshList();

    }

    private async Task deleteClick(int id)
    {
        if (!await JS.InvokeAsync<bool>("confirm", "seguro?"))
        {
            return;
        }

        var request = new HttpRequestMessage(HttpMethod.Delete,
            config["Api_Url"] + "Departament/"+ id.ToString());

        var client = ClientFactory.CreateClient();

        var response = await client.SendAsync(request);

        using var responseStream = await response.Content.ReadAsStreamAsync();

        string resp = await JsonSerializer.DeserializeAsync<string>(responseStream);

        await JS.InvokeVoidAsync("alert", resp);

        await refreshList();

    }

    private void addClick()
    {
        modalTitle = "Add departament";
        DepartamentId = 0;
        DepartamentName = "";
    }

    private void editClick(DepartamentClass dep)
    {
        modalTitle = "Edit departament";
        DepartamentId = dep.DepartamentId;
        DepartamentName = dep.DepartamentName;
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime JS { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private Microsoft.Extensions.Configuration.IConfiguration config { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IHttpClientFactory ClientFactory { get; set; }
    }
}
#pragma warning restore 1591
